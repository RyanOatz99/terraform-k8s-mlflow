name: Publish docker container
on:
  push:
    paths:
      - 'docker/**'
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if:
      !contains('
        refs/heads/master
        refs/heads/main
      ', github.ref)
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Test Build
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: false
        tags: ghcr.io/${{ github.repository_owner }}/mlflow:latest

  push:
    name: Push to registry
    runs-on: ubuntu-latest
    if:
      contains('
        refs/heads/master
        refs/heads/main
      ', github.ref)
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Parse MLFlow version
      id: vars
      run: |
        echo ::set-output name=version::$(cat docker/requirements.txt | grep mlflow | awk -F  '==' '{print $2}')
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/mlflow:latest
          ghcr.io/${{ github.repository_owner }}/mlflow:${{steps.vars.outputs.version}}
